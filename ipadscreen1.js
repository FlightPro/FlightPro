/*
 * JS for ipadscreen1 generated by Appery.io
 */

Apperyio.getProjectGUID = function() {
    return '3e0fa5fc-46ec-4d23-8225-459d9035f258';
};

function navigateTo(outcome, useAjax) {
    Apperyio.navigateTo(outcome, useAjax);
}

// Deprecated


function adjustContentHeight() {
    Apperyio.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Apperyio.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Apperyio.setDetailContent(pageUrl);
}

Apperyio.AppPages = [{
    "name": "ipadscreen1",
    "location": "ipadscreen1.html"
}];

$(document).bind('scroll', function() {
    adjustContentHeightWithPadding();
});
$(window).bind(window.orientation ? 'orientationchange' : 'resize', function() {
    adjustContentHeightWithPadding();
});

ipadscreen1_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {

    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'ipadscreen1';

    /*
     * Nonvisual components
     */
    var datasources = [];

    /*
     * Events and handlers
     */

    // Before Show
    var ipadscreen1_beforeshow = function() {
            Apperyio.CurrentScreen = "ipadscreen1";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var ipadscreen1_onLoad = function() {
            ipadscreen1_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            ipadscreen1_deviceEvents();
            ipadscreen1_windowEvents();
            ipadscreen1_elementsEvents();
        };

    // screen window events
    var ipadscreen1_windowEvents = function() {

            $('#ipadscreen1').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var ipadscreen1_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

                $(document).bind("resume", function() {
                    PushNotification.getPendingNotifications(function(status) {
                        var notifications = status.notifications;
                        for (var i = 0; i < notifications.length; ++i) {
                            PushNotification.notificationCallback(notifications[i]);
                        }
                    });
                });
            });
        };

    // screen elements extra js
    var ipadscreen1_elementsExtraJS = function() {
            // screen (ipadscreen1) extra code

        };

    // screen elements handler
    var ipadscreen1_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

        };

    $(document).off("pagebeforeshow", "#ipadscreen1").on("pagebeforeshow", "#ipadscreen1", function(event, ui) {
        ipadscreen1_beforeshow();
    });

    if ($(window).width() >= 650) {
        var fixed = true;

        jQuery(document).ready(function($) {
            $('.ui-content').addClass("width_gt_650");

            if (navigator.platform == 'iPad' || navigator.platform == 'iPhone' || navigator.platform == 'iPod') {
                $(".content-secondary").css("position", "absolute");
                fixed = false;
            } else {
                $(".content-secondary").css("position", "fixed");
            }

            $(".content-secondary").css("float", "left");
            $(".content-secondary").css("left", "0px");
            var heightEl = $(".ui-header:visible");
            $(".content-secondary").css("top", heightEl.outerHeight() ? heightEl.outerHeight() : 0 + "px");
            $(".content-secondary").css("z-index", "999");
            $(".content-secondary").css("border", "0px solid red");

            adjustContentHeightWithPadding();
        });

        $('.content-secondary input, .content-secondary textarea').unbind('blur', adjustContentHeightWithPadding);
        $('.content-secondary input, .content-secondary textarea').bind('blur', adjustContentHeightWithPadding);

        $("#ipadscreen1").bind("pageshow", function(event) {
            var $page = $(this);
            $page.find(":jqmData(scroll):not(.ui-scrollview-clip)").each(function() {
                var $this = $(this);
                // XXX: Remove this check for ui-scrolllistview once we've
                //      integrated list divider support into the main scrollview class.
                if ($this.hasClass("ui-scrolllistview")) $this.scrolllistview();
                else {
                    var st = $this.jqmData("scroll") + "";
                    var paging = st && st.search(/^[xy]p$/) != -1;
                    var dir = st && st.search(/^[xy]/) != -1 ? st.charAt(0) : null;

                    var opts = {};

                    if (dir) {
                        opts.direction = dir;
                    }

                    if (paging) {
                        opts.pagingEnabled = true;
                    }

                    var method = $this.jqmData("scroll-method");
                    if (method) {
                        opts.scrollMethod = method;
                    }

                    $this.scrollview(opts);
                }
            });
        });
    }

    if (runBeforeShow) {
        ipadscreen1_beforeshow();
    } else {
        ipadscreen1_onLoad();
    }
};

$(document).off("pagecreate", "#ipadscreen1").on("pagecreate", "#ipadscreen1", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    ipadscreen1_js();
});